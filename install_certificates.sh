#!/bin/bash

# LocalWhisper - Instalador de Certificados SSL (macOS)

echo "======================================================"
echo "üîê Instalador de Certificados SSL para Python"
echo "======================================================"
echo ""
echo "Este script corrige o erro:"
echo "  'SSL: CERTIFICATE_VERIFY_FAILED'"
echo ""

# Detectar sistema operacional
if [[ "$OSTYPE" != "darwin"* ]]; then
    echo "‚ùå Este script √© apenas para macOS"
    echo "No Linux, os certificados geralmente funcionam sem configura√ß√£o adicional"
    exit 1
fi

# Verificar Python
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 n√£o encontrado!"
    exit 1
fi

PYTHON_VERSION=$(python3 --version | cut -d' ' -f2 | cut -d'.' -f1,2)
echo "Python encontrado: $(python3 --version)"
echo ""

# M√©todo 1: Executar Install Certificates.command (m√©todo oficial)
echo "M√©todo 1: Executando Install Certificates.command do Python..."
echo ""

# Encontrar diret√≥rio do Python
PYTHON_DIR="/Applications/Python ${PYTHON_VERSION}"

if [ -d "$PYTHON_DIR" ]; then
    CERT_COMMAND="$PYTHON_DIR/Install Certificates.command"

    if [ -f "$CERT_COMMAND" ]; then
        echo "Executando: $CERT_COMMAND"
        open "$CERT_COMMAND"
        echo "‚úì Comando de instala√ß√£o executado"
        echo ""
        echo "Aguarde a janela de instala√ß√£o fechar e pressione Enter..."
        read
    else
        echo "‚ö†Ô∏è  Arquivo n√£o encontrado: $CERT_COMMAND"
    fi
else
    echo "‚ö†Ô∏è  Diret√≥rio do Python n√£o encontrado: $PYTHON_DIR"
fi

echo ""

# M√©todo 2: Instalar certifi via pip
echo "M√©todo 2: Instalando/atualizando pacote certifi..."
echo ""

if [ -d "venv" ]; then
    source venv/bin/activate
    echo "Ambiente virtual ativado"
fi

pip install --upgrade certifi
echo "‚úì Pacote certifi instalado/atualizado"

echo ""

# M√©todo 3: Criar link simb√≥lico (fallback)
echo "M√©todo 3: Verificando link simb√≥lico de certificados..."
echo ""

OPENSSL_DIR=$(python3 -c "import ssl; print(ssl.get_default_verify_paths().openssl_cafile)" 2>/dev/null)

if [ -n "$OPENSSL_DIR" ]; then
    echo "Certificados esperados em: $OPENSSL_DIR"

    if [ ! -f "$OPENSSL_DIR" ]; then
        echo "‚ö†Ô∏è  Arquivo de certificados n√£o encontrado"

        # Tentar encontrar certificados do certifi
        CERTIFI_PATH=$(python3 -c "import certifi; print(certifi.where())" 2>/dev/null)

        if [ -n "$CERTIFI_PATH" ] && [ -f "$CERTIFI_PATH" ]; then
            echo "Certificados certifi encontrados em: $CERTIFI_PATH"

            # Criar diret√≥rio se n√£o existir
            CERT_DIR=$(dirname "$OPENSSL_DIR")
            if [ ! -d "$CERT_DIR" ]; then
                sudo mkdir -p "$CERT_DIR"
            fi

            # Criar link simb√≥lico
            sudo ln -sf "$CERTIFI_PATH" "$OPENSSL_DIR"
            echo "‚úì Link simb√≥lico criado"
        fi
    else
        echo "‚úì Certificados j√° configurados"
    fi
else
    echo "‚ö†Ô∏è  N√£o foi poss√≠vel determinar caminho dos certificados"
fi

echo ""
echo "======================================================"
echo "‚úÖ Instala√ß√£o conclu√≠da!"
echo "======================================================"
echo ""
echo "Agora tente executar a aplica√ß√£o novamente:"
echo "  ./run.sh"
echo ""
echo "Se o erro persistir, tente as solu√ß√µes alternativas em:"
echo "  README.md - Se√ß√£o 'Erro SSL ao baixar modelos'"
echo ""
